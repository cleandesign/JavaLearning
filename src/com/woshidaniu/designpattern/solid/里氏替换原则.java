package com.woshidaniu.designpattern.solid;

/**
 * Created by kang on 2018/7/5.
 */

//里氏替换原则（六大原则中最文静的姑娘，但却不太招人喜欢）：这个原则表达的意思是一个子类应该可以替换掉父类并且可以正常工作。
//  那么翻译成比较容易理解的话，就是说，子类一般不该重写父类的方法，因为父类的方法一般都是对外公布的接口，是具有不可变性的，你不该将一些不该变化的东西给修改掉。
//
//          上述只是通常意义上的说法，很多情况下，我们不必太理解里氏替换这个文静的姑娘，比如模板方法模式，缺省适配器，装饰器模式等一些设计模式，就完全不搭理这个文静的姑娘。
//
//          不过就算如此，如果你真的遇见了不得不重写父类方法的场景，那么请你考虑，你是否真的要把这个类作为子类出现在这里，或者说这样做所换来的是否能弥补你失去的东西，比如子类无法代替父类工作，那么就意味着如果你的父类可以在某一个场景里工作的很正常，那么你的子类当然也应该可以，否则就会出现下述场景。

public class 里氏替换原则 {
}
